#!/usr/bin/python3

import json

class FileStorage:
    __file_path = "file.json"
    __objects = {}

    @property
    def _FileStorage__file_path(self):
        return FileStorage.__file_path

    @property
    def _FileStorage__objects(self):
        return FileStorage.__objects

    def all(self):
        return FileStorage.__objects

    def new(self, obj):
        key = "{}.{}".format(type(obj).__name__, obj.id)
        FileStorage.__objects[key] = obj

    def save(self):
        with open(FileStorage.__file_path, mode='w', encoding="utf-8") as file:
            new_objects = {k: v.to_dict() for k, v in FileStorage.__objects.items()}
            json.dump(new_objects, file)

    def reload(self):
        try:
            with open(self._FileStorage__file_path(), mode='r', encoding="utf-8") as file:
                data = json.load(file)
                for key, val in data.items():
                    class_name, obj_id = key.split('.')
                    class_instance = globals()[class_name]()
                    class_instance.from_dict(val)
                    FileStorage.__objects[key] = class_instance
        except FileNotFoundError:
            pass
